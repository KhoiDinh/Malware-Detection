<?php
/**
 * Created by PhpStorm.
 * User: khoi dinh
 * Date: 4/6/2018
 * Time: 2:25 PM
 */

require_once 'DBLogin.php';
session_start();
echo <<< MFILE
<html>
<title> Upload Malware File </title>
<body>
    <header id = "header">
        <h1 align="center">Upload Malware File</h1>
        <p align="center"> Please choose the malware file you want to upload.</p>
    </header>
<head>
<script>
function validateAll(form)
{
    var hold = validateMalwareName(form.mname.value)
    if(hold =="")
    {
        alert("Correct entries!")
        return true
    }
    else
    {
        alert(hold)
        return false
    }
}

function validateMalwareName(field) {
  if (field == "") return "No malware name was entered.\n"
  else if (/[^a-zA-Z0-9]/.test(field))
    return " Only letters and numbers are allowed for the malware name.\n"
  return ""
}
</script>
</head>

    <form method="post" enctype="multipart/form-data" action="malware_upload.php" onsubmit="return validateAll(this)">
        Select malware file to upload:
        <input type="file" name="file"required>


            <div >
                <label for="mname"><b>Malware Name</b></label>
                <input type="text" placeholder="Malware Name" name="mname" required>
            </div>
            <div >
                <label for="uname"><b>Admin Username</b></label>
                <input type="text" placeholder="Enter Username" name="uname" required>
            </div>

            <div>
                <label for="psw"><b>Admin Password</b></label>
                <input type="password" placeholder="Enter Password" name="psw" required>
            </div>
            <input type="submit" value="Upload" name="submit">

    </form>

    <form>
        <input type="submit" formaction="file_upload.php" value="Go to File Uploads" />
        <input type="submit" formaction="CreateAdmin.php" name="SI" value="Sign In" />
    </form>
    
<form method="post" enctype="multipart/form-data">
        <input type="submit" name = "logout" value="Logout" /> 
        </form>
MFILE;


if(isset($_POST['logout']))
{
    destroy_session_and_data();
    header('Location:CreateAdmin.php');
}

if($_FILES)//check if cookies set
{
    $conn = "";
    $conn = new mysqli($hn, $un, $pw, $db);
    if($conn -> connect_error) die($conn->connect_error);

    $username = "";
    $enterName = "";
    $malwareName = "";

    $username = $_POST['uname'];
    $enterName = $_POST['mname'];
    $malwareName = $_POST['mname'];

    if (!preg_match("/^[a-zA-Z0-9]+$/", $malwareName)) {
            echo "Invalid malware name. Only Numbers and Letters allowed". "<br>";
            exit();
        }
        else if(!isset($_SESSION['check']) || !isset($_COOKIE['token']) ||
            $_SESSION['check'] !== hash('ripemd128', $_SERVER['REMOTE_ADDR'] . $_SERVER['HTTP_USER_AGENT'] . $_COOKIE['token'])
            || $_SESSION['admin'] !== $username) {
            echo "Need to login as Admin before can upload files.<br>";
            exit();
        }
        else {
            session_regenerate_id();
            verifyAdmin($conn);
            $fileGood = "";
            $fileGood = $_FILES['file']['tmp_name'];

            $fileInput = "";
            $fileInput = $_FILES['file']['type'];

            $entry = "";
            $entry = getSection($fileGood, $fileInput);

            $entry2 = "";
            $entry2 = chooseSanitization($conn,$entry, $fileInput);
            $entry2 =stripcslashes($entry2); //ALLOWED BECAUSE PREPARE STATEMENT MESSES STUFF UP, ADDS EXTRA \

            $bin = "";
            $bin = mysqli_real_escape_string($conn,$entry2);

            if(checkExistence($conn, $malwareName,$bin) === true) {
                echo "Malware sequence and/or name already in database. Please upload different name/sequence. <br>";
                exit();
            }

            insertIntoDB($conn,$malwareName,$bin);
        }
    $conn->close();
}

function insertIntoDB($conn,$malwareName,$bin)
{
    $query = "";
    $query = "INSERT into malwarelist values (?,?)"; //CHANGE
    $object = "";
    $object = $conn->prepare($query); //CHANGE
    $object->bind_param('ss', $malwareName,$bin); //CHANGE
    $object->execute(); //CHANGE
    echo "Malware has been added! <br>";
    $object->close();
}

function chooseSanitization($connection,$string, $fileType)
{
    if(!is_object($connection) || !is_string($string) || !is_string($fileType))
    {
        echo "Cannot input data. Try again<br>";
        exit();
    }
    if ($fileType === 'text/plain')
    {
        return mysql_entities_fix_string($connection,$string);
    }
    else
    {
        return mysql_fix_string($connection,$string);
    }
}

function mysql_entities_fix_string($connection, $string)
{
    if(!is_object($connection) || !is_string($string))
    {
        echo "Error. Try again<br>";
        exit();
    }
    return htmlentities(mysql_fix_string($connection, $string));
}
function mysql_fix_string($connection, $string)
{
    if(!is_object($connection) || !is_string($string))
    {
        echo "Error. Try again<br>";
        exit();
    }

    if (get_magic_quotes_gpc()) $string = stripslashes($string);
    return $connection->real_escape_string($string);
}

function getSection($file, $type)
{
    if(!is_string($file) || !is_string($type))
    {
        echo "Can't get section from file <br>";
        exit();
    }
    $file2 = "";
    $file2 = fopen($file,"rb") or exit("Unable to open file!");

    $returnString = "";
    $returnString = fread($file2,filesize($_FILES['file']['tmp_name']));

    fclose($file2);

    if(strlen($returnString) < 20)
    {
        echo "Malware too short to be considered dangerous.". "<br>";
        exit();
    }

    if($type === 'text/plain')
    {
        return substr($returnString, 0, 20);
    }
    return substr($returnString,60,20);

}


function verifyAdmin($conn)
{
    if(!is_object($conn))
    {
        echo "Can't verify user.<br>";
        exit();
    }

    $adminCheck = "";
    $adminResult = "";
    $boole= "";
    $adminCheck = "Select * from admin;";
    $adminResult = $conn -> query($adminCheck);
    $boole = checkEntries($conn,$adminResult);

    if($boole[0] ===false || $boole[1]===false)
    {
        echo "Invalid Credentials. Please try again" . "<br>";
        exit();
    }
    $adminResult->close();

}

function checkEntries($conn,$rows)
{
    if(!is_object($conn) || !is_object($rows))
    {
        echo "Can't verify entries<br>";
        exit();
    }
    $usercheck = false;
    $passcheck = false;

    $length = "";
    $length = $rows->num_rows;

    $sanitizeUser ="";
    $sanitizePass = "";
    $sanitizeUser = mysql_entities_fix_string($conn,$_POST['uname']);
    $sanitizePass = mysql_entities_fix_string($conn,$_POST['psw']);

    for($j=0; $j<$length; ++$j) {
        $rows->data_seek($j);
        $row = "";
        $row = $rows->fetch_array(MYSQLI_ASSOC);

        $hashTwo = "";
        $hashOne = "";
        $testHash = "";
        $hashOne = $row['hashOne'];
        $hashTwo = $row['hashTwo'];
        $testHash = hash('ripemd128', "$hashOne$sanitizePass$hashTwo");

        if ($sanitizeUser === $row['userName'] && $testHash === $row['pass']) {
            $usercheck = true;
            $passcheck = true;
        }
    }

    return array($usercheck,$passcheck);
}

function checkExistence($conn,$mname,$entry)
{
    if(!is_object($conn)|| !is_string($mname) || !is_string($entry))
    {
        echo "Can't add to records<br>";
        exit();
    }

    $query = "";
    $query = "Select * from malwarelist;";
    $result = "";
    $result = $conn -> query($query);

    $length = "";
    $length = $result->num_rows;


    for($j=0; $j<$length; ++$j) {
        $result->data_seek($j);
        $row = "";
        $row = $result->fetch_array(MYSQLI_ASSOC);

        if ( $row['malwareName']=== $mname || $entry === $row['sequence']) {
            return true;
        }
    }
    return false;
}

function destroy_session_and_data()
{
    $_SESSION = array();    // Delete all the information in the array
    setcookie(session_name(), '', time() - 2592000, '/');
    session_destroy();
}
echo "</body></html>"
?>

